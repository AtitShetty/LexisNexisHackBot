{
    "reference": {
        "@otherprops": "connectors",
        "@id": "pren_ref",
        "title": {
            "userinput": {
                "#tail": "Connector",
                "#text": "pre/n"
            }
        },
        "prolog": {
            "author": "Barb Bruns",
            "copyright": {
                "copyryear": {
                    "@year": "2007"
                },
                "copyrholder": "Lexisnexis"
            },
            "critdates": {
                "created": {
                    "@date": "2010-04-29"
                }
            },
            "metadata": {
                "prodinfo": {
                    "prodname": "Lexis Advance",
                    "vrmlist": {
                        "vrm": {
                            "@version": "1"
                        }
                    }
                }
            }
        },
        "refbody": {
            "section": {
                "p": [
                    {
                        "userinput": {
                            "#tail": "connector to find documents in which the first word precedes the second by not more than \"n\" words.",
                            "#text": "pre/n"
                        },
                        "#text": "Use the"
                    },
                    "For example, the following search finds documents where the word \"overtime\" precedes \"compensation\" within 3 words.",
                    {
                        "userinput": "overtime pre/3 compensation"
                    },
                    "pre/n is especially useful in situations where a different word order significantly alters meaning. For example, \"summary judgment\" is significantly different from \"judgment summary.\""
                ],
                "note": {
                    "userinput": [
                        {
                            "#tail": "or",
                            "#text": "+n"
                        },
                        {
                            "#tail": "in place of",
                            "#text": "onear/n"
                        },
                        {
                            "#tail": "if you wish. All 3 commands function the same way.",
                            "#text": "pre/n"
                        }
                    ],
                    "#text": "You can use"
                }
            }
        }
    }
}